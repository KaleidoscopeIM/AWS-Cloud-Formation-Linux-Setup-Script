---
Description: Setup an Amazon Linux Web server

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 keypair to enable SSH access to the instance
  SSHCIDR:
    Type: String
    Description: The CIDR block restricting SSH
    MinLength: 9
    Default: 131.247.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: USF CIDR block address in proper formate

Mappings:
  Region2AMI: 
    us-east-1:
      AMI: ami-0e2ff28bfb72a4e45
    us-east-2:
      AMI: ami-0998bf58313ab53da
    us-west-1:
      AMI: ami-021bb9f371690f97a
    us-west-2:
      AMI: ami-079f731edfe27c29c
    ca-central-1:
      AMI: ami-0fa94ecf2fef3420b      
    ap-south-1:
      AMI: ami-05695932c5299858a
    ap-northeast-1:
      AMI: ami-02ddf94e5edc8e904
    ap-northeast-2:
      AMI: ami-0ecd78c22823e02ef
    ap-southeast-1:
      AMI: ami-043afc2b8b6cfba5c
    ap-southeast-2:
      AMI: ami-01393ce9a3ca55d67      
    eu-central-1:
      AMI: ami-0ba441bdd9e494102
    eu-west-1:
      AMI: ami-0e61341fa75fcaa18
    eu-west-2:
      AMI: ami-050b8344d77081f4b
    eu-west-3:
      AMI: ami-053418e626d0549fc
    eu-north-1:
      AMI: ami-01a7a49829bda9d79
    sa-east-1:
      AMI: ami-05b7dbc290217250d

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          InstallAndConfig:
            - Install
            - Configure
            
        Install:
          packages:
            yum:
              epel-release: []
              nginx: []

          files:
            /var/www/html/index.html:
              content: !Sub |
                <html>
                  <head>
                    <title>Gautam Saini</title>
                  </head>
                  <body>
                    <h1>Gautam Saini</h1><br>
                    <h2>Location: /var/www/html/index.html</h2><br>
                    <h1>Region: ${AWS::Region}</h1><br>
                    <h1>
              mode: '000644'
              owner: root
              group: root
            /usr/share/nginx/html/index.html:
              content: |
                <html>
                  <head>
                    <title>Gautam Saini</title>
                  </head>
                  <body>
                    <h1>Gautam Saini</h1><br>
                    <h2>Location: /usr/share/nginx/html/index.html</h2>
                    <h5>please wait until cloud formation script finish. It will change root web to /var/www/html.</h5>
                  </body>
                </html>
              mode: '000644'
              owner: root
              group: root
              
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
              
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} --configsets InstallAndConfig
                runas=root
              mode: '000400'
              owner: root
              group: root

          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'
              cfn-hup:
                enabled: 'true'
                ensureRunnig: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
                  
        Configure:
          commands:
            set_nginx_config:
              command: !Sub |
                 yum update -y
                 perl -077pi -e 's@/usr/share/nginx/html@/var/www/html@s' /etc/nginx/nginx.conf
                 echo "PublicDnsName - " >> /var/www/html/index.html
                 curl -s http://169.254.169.254/latest/meta-data/public-hostname >> /var/www/html/index.html
                 echo "</h1></body></html>" >> /var/www/html/index.html                 
                 service nginx restart

    Properties:
      ImageId: !FindInMap [Region2AMI, !Ref 'AWS::Region', 'AMI']
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref WebserverSecurityGroup
      Tags:
      - Key: Name
        Value: Amazon Linux Web Server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          yum update -y aws-cfn-bootstrap
          # notice change from -r to --resource 
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region} --configsets InstallAndConfig
          
  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allows ssh and http
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      - CidrIp: !Ref SSHCIDR
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
        
Outputs:
  WebURL:
    Description: The URL for the web page.
    Value: !Sub 'http://${EC2Instance.PublicIp}'
  PublicDNS:
    Description: The AWS public DNS name for our instance
    Value: !Sub ${EC2Instance.PublicDnsName}
    
